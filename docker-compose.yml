services:
  postgres:
    image: postgres:15-alpine
    container_name: caveo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: caveo_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - caveo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d caveo_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: caveo-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres123
      DB_DATABASE: caveo_db
      AWS_REGION: us-east-1
      LOG_LEVEL: info
      COGNITO_USER_POOL_ID: ${COGNITO_USER_POOL_ID:-us-east-1_CHANGEME}
      COGNITO_CLIENT_ID: ${COGNITO_CLIENT_ID:-CHANGEME}
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - caveo-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  caveo-network:
    driver: bridge
