{
	"info": {
		"name": "Caveo API",
		"description": "Coleção de endpoints da API Caveo com exemplos e testes automáticos.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Profile Update & Token Refresh",
			"item": []
		},
		{
			"name": "Auth - Sign In/Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Response has tokens', function () {",
							"    var json = pm.response.json();",
							"    pm.expect(json.tokens).to.have.property('AccessToken');",
							"    pm.expect(json.tokens).to.have.property('IdToken');",
							"    pm.environment.set(\"accessToken\", json.tokens.AccessToken);",
							"    pm.environment.set(\"idToken\", json.tokens.IdToken);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"user@user.com\",\n  \"password\": \"usertest!\",\n  \"name\": \"usertest\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Users - List All (admin)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Response is array', function () {",
							"    pm.expect(pm.response.json()).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Account - Get Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Response has user fields', function () {",
							"    var json = pm.response.json();",
							"    pm.expect(json).to.have.property('id');",
							"    pm.expect(json).to.have.property('email');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/account/me",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"account",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Account - Edit Profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Profile updated', function () {",
							"    var json = pm.response.json();",
							"    pm.expect(json.message).to.include('Profile updated');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Jane Doe\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/account/edit",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"account",
						"edit"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000"
		},
		{
			"key": "accessToken",
			"value": ""
		},
    {
      "key": "idToken",
      "value": ""
    }
	]
}